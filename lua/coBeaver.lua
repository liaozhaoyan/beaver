---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2024/1/1 1:41 AM
---
--- 2024.1.1: CcoBeaver is to manage all beaver coroutine events
local require = require
require("eclass")

local system = require("common.system")
local CbeaverIO = require("beaverIO")

local cffi = require("beavercffi")
local c_type, c_api = cffi.type, cffi.api

local class = class
local CcoBeaver = class("coBeaver", CbeaverIO)

local c_new = c_type.new
local liteAssert = system.liteAssert
local coReport = system.coReport
local c_api_poll_fds = c_api.poll_fds
local format = string.format
local time = os.time
local pairs = pairs
local error = error
local print = print
local create = coroutine.create
local resume = coroutine.resume
local status = coroutine.status
local traceback = debug.traceback

function CcoBeaver:_init_()
    CbeaverIO._init_(self)
end

function CcoBeaver:_del_()
    CbeaverIO._del_(self)
end

function CcoBeaver:co_add(cb, fd)
    self:add(fd)  -- add to epoll fd, defined in beaverIO.lua
    local co = create(function(o, obj, afd, tmo)  cb(o, obj, afd, tmo) end)
    self._cos[fd] = co  -- _cos defined in beaverIO.lua

    return co
end

function CcoBeaver:co_exit(fd)
    self:remove(fd)
    self._cos[fd] = nil -- _cos defined in beaverIO.lua
end
-- 
local function _pollFd(cos, nes)
    for i = 0, nes.num - 1 do
        local e = nes.evs[i];
        local fd = e.fd

        local co = cos[fd]
        -- assert(co, string.format("fd: %d not setup.", fd))
        if co and status(co) == "suspended" then -- coroutine event may closed.
            local res, msg = resume(co, e)
            if not res then
                print("resume error.", traceback(co))
            end
            coReport(co, res, msg)
        end
    end
    return 0
end

function CcoBeaver:poll()
    local efd = self._efd
    local cos = self._cos
    while true do
        local nes = c_new("native_events_t")
        local res = c_api_poll_fds(efd, 1, nes)

        if res < 0 then
            error(format("epoll failed, errno: %d", -res))
        end

        _pollFd(cos, nes)
    end
end

return CcoBeaver
