---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2024/1/1 11:04 PM
---

require("eclass")

local psocket = require("posix.sys.socket")
local unistd = require("posix.unistd")
local CasyncBase = require("async.asyncBase")

local CasyncAccept = class("asyncAccept", CasyncBase)

function CasyncAccept:_init_(beaver, fd, tmo)
    self._toWake = coroutine.running()
    CasyncBase._init_(self, beaver, fd)  -- accept never overtime.
end

function CasyncAccept:_setup(fd, tmo)
    local co = self._toWake

    while true do
        local e = coroutine.yield()
        if e.ev_close > 0 then
            print("bind closed.")
            break
        else
            local nfd, addr, errno = assert(psocket.accept(fd))
            assert(nfd, addr)
            local res, msg = coroutine.resume(co, nfd, addr)
            assert(res, msg)
        end
    end
    self:stop()
    unistd.close(fd)
end

return CasyncAccept
